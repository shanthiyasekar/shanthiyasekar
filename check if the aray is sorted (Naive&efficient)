//Naive : Time complexity =O(N^2) space complexity: O(1)
#include<bits/stdc++.h>
using namespace std;
int main(){
    int arr[]={10,15,20,35};
    int n=sizeof(arr)/sizeof(arr[0]);
    int flag=1;
    for(int i=0;i<n-1;i++){
        for(int j=i+1;j<n;j++){
            if(arr[i]>arr[j])
            {
                flag=0;
                break;
            }
        }
        if(flag==0)
            break;
    }
    if(flag==0)
        cout<<"false";
    else
        cout<<"True";
}


//efficient  :time complexity: O(N) space complexity:O(1)
#include <bits/stdc++.h>

using namespace std;
bool solve(int arr[],int n){
    int flag=1;
   for(int i=0;i<n-1;i++)
   {
        if(arr[i]>arr[i+1])
        {
            flag=0;
            break;
        } 
   }
    if(flag)
        return true;
    else
        return false;
}
int main()
{
    
    int arr[]={10,15,20,35};
    int n=sizeof(arr)/sizeof(arr[0]);
      int flag=1;

   cout<<solve(arr,n);
    
}
