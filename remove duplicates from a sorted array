 //naive  time complexity:O(N) space com:O(N)
 
 
 #include <bits/stdc++.h>
    
    using namespace std;
   
    int solve(int arr[],int n)
    {
        int temp[n];
        temp[0]=arr[0];
        int res=1;
        for(int i=1;i<n;i++){
            if(temp[res-1]!=arr[i]){
                temp[res++]=arr[i];
            }
        }
        for(int i=0;i<res;i++){
            arr[i]=temp[i];
        }
        return res;
    }
    int main()
    {
        
        int arr[]={10,15,35,35};
        int n=sizeof(arr)/sizeof(arr[0]);
        int a=solve(arr,n);
        for(int i=0;i<a;i++)
            cout<<arr[i]<<" ";
        
}

   //efficient
   
   #include <bits/stdc++.h>
    
    using namespace std;
   
    int solve(int arr[],int n)
    {
       int res=1;
       for(int i=1;i<n;i++){
            if(arr[res-1]!=arr[i])
            {
                arr[res]=arr[i];
                res++;
            }
       }
       return res;
    }
    int main()
    {
        
        int arr[]={10,15,35,35};
        int n=sizeof(arr)/sizeof(arr[0]);
        int a=solve(arr,n);
        for(int i=0;i<a;i++)
            cout<<arr[i]<<" ";
        
  }

    
